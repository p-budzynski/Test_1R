Zadanie 02:

(pseudo kod)
        String url = "https://api.apilayer.com/exchangerates_data/";

                .parametry:(url + "convert?to=" + currencyTo + "&from=" + currencyFrom + "&amount=" + amount)
                .header:("apikey", "BnW7ENBiBLBknHJSmAIOb4xax9pdohFL")


należy napisać jakiś CurrencyService a w nim metode double exchange(String CurrencyFrom, String CurrencyTo, double amount)
ktora przeksztalca kwote amount w walucie FROM na walute TO.
Problem polega na tym ze kazde zapytanie "nas kosztuje" a w sumie kurs nie zmienia sie tak czesto, powiedzmy raz na 10 sekund. a robimy tysiace zapytan na sekunde.
zeby nie obciazac systemu to chcemy wprowadzic cache kursow walut, ktory trwa 10 sekund (parametr konfigurowalny) no i tez chcemy napisac testy jednostkowe ktore spawdzaja czy dany cache dziala czy nie.

uwaga: cache ma byc thread-safe.


-----UWAGI-----

Zadanie 02:
 CachedRate cachedRate = getCacheRate(cacheKey);
        if (cachedRate != null) {
            return amount * cachedRate.rate;
        }
tu jest racecondition

lock.lock();
lockujesz wszystko dla wszystkich, czy jak ktos pobiera pln -> usd to powiniene czekac az ktos inny skonczy CHF-> EUR?